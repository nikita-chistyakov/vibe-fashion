#!/usr/bin/env python3
"""
Environment setup script for Vibe Fashion Streamlit app
"""

import os
import sys
from pathlib import Path

def create_env_file():
    """Create .env file with default configuration"""
    
    # Get the project root directory
    project_root = Path(__file__).parent
    backend_dir = project_root / "services" / "backend"
    
    # Create .env file in backend directory
    env_file = backend_dir / ".env"
    
    if env_file.exists():
        print(f"‚úÖ Environment file already exists at {env_file}")
        return str(env_file)
    
    # Default environment configuration
    env_content = """# Vibe Fashion Backend Environment Configuration
# Generated by setup_environment.py

# Backend Configuration
API_HOST=0.0.0.0
API_PORT=8000
DEBUG=True

# Google Cloud Configuration (for image generation)
# You need to set these values for image generation to work
GOOGLE_CLOUD_PROJECT=your-google-cloud-project-id
GOOGLE_CLOUD_LOCATION=europe-west1
GOOGLE_GENAI_USE_VERTEXAI=True
GOOGLE_API=your-google-api-key

# Ollama Configuration (for LLM)
# Using the default Ollama service - this should work out of the box
OLLAMA_API_BASE=https://ollama-153939933605.europe-west1.run.app
GEMMA_MODEL_NAME=gemma3:12b
"""
    
    try:
        with open(env_file, 'w') as f:
            f.write(env_content)
        print(f"‚úÖ Created environment file at {env_file}")
        return str(env_file)
    except Exception as e:
        print(f"‚ùå Failed to create environment file: {e}")
        return None

def check_dependencies():
    """Check if required dependencies are installed"""
    
    print("üîç Checking dependencies...")
    
    # Check if uv is available
    try:
        import subprocess
        result = subprocess.run(['uv', '--version'], capture_output=True, text=True)
        if result.returncode == 0:
            print("‚úÖ uv is available")
        else:
            print("‚ùå uv is not available. Please install uv first.")
            return False
    except FileNotFoundError:
        print("‚ùå uv is not available. Please install uv first.")
        return False
    
    # Check if we're in the right directory
    project_root = Path(__file__).parent
    backend_dir = project_root / "services" / "backend"
    
    if not backend_dir.exists():
        print(f"‚ùå Backend directory not found at {backend_dir}")
        return False
    
    print("‚úÖ Project structure looks good")
    return True

def install_backend_dependencies():
    """Install backend dependencies using uv"""
    
    print("üì¶ Installing backend dependencies...")
    
    backend_dir = Path(__file__).parent / "services" / "backend"
    
    try:
        import subprocess
        result = subprocess.run(['uv', 'sync'], cwd=backend_dir, check=True)
        print("‚úÖ Backend dependencies installed successfully")
        return True
    except subprocess.CalledProcessError as e:
        print(f"‚ùå Failed to install backend dependencies: {e}")
        return False
    except Exception as e:
        print(f"‚ùå Unexpected error: {e}")
        return False

def main():
    """Main setup function"""
    
    print("üöÄ Setting up Vibe Fashion Streamlit Environment")
    print("=" * 50)
    
    # Check dependencies
    if not check_dependencies():
        print("\n‚ùå Setup failed. Please fix the issues above and try again.")
        sys.exit(1)
    
    # Create environment file
    env_file = create_env_file()
    if not env_file:
        print("\n‚ùå Setup failed. Could not create environment file.")
        sys.exit(1)
    
    # Install backend dependencies
    if not install_backend_dependencies():
        print("\n‚ùå Setup failed. Could not install backend dependencies.")
        sys.exit(1)
    
    print("\n‚úÖ Setup completed successfully!")
    print("\nüìã Next steps:")
    print("1. Edit the environment file if you have Google API keys:")
    print(f"   {env_file}")
    print("2. Start the backend server:")
    print("   cd services/backend && uv run python main.py")
    print("3. Start the Streamlit frontend:")
    print("   python run_streamlit.py")
    print("\nüí° Note: The app will work with placeholder images if you don't have Google API keys.")

if __name__ == "__main__":
    main()
